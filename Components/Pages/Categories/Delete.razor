@page "/categories/delete/{id:int}"
@inject ApplicationDbContext Context
@inject NavigationManager Navigation
@attribute [Authorize]

@rendermode InteractiveServer

@if (Model is null)
{
    <div class="alert alert-danger">
        <p class=" text-center">Category not found.</p>
    </div>
}
else
{
    <h1 class="h3 fw-semibold mb-4 text-dark border-bottom pb-2">Are you sure you want to delete?</h1>
    <EditForm Model="@Model" OnValidSubmit="DeleteSubmitAsync">
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="Model.Title" readonly="readonly"/>
        </div>
        <button type="submit" class="btn btn-danger">Delete</button>
        <a href="/categories" class="btn btn-secondary">Cancel</a>
        <div class="mb-3"></div>
    </EditForm>
}

@code
{
    [Parameter]
    public int Id { get; set; }
    private Category? Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Context.Categories
            .AsNoTracking()
            .FirstOrDefaultAsync(x => x.Id == Id);
    }

    private async Task DeleteSubmitAsync()
    {
        try
        {
            Context.Categories.Remove(Model);
            await Context.SaveChangesAsync();
            Navigation.NavigateTo("categories");
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
            throw;
        }
    }
}